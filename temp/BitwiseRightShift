private class BitwiseRightShift(val block0 : ReporterBlock,
val block1 : ReporterBlock, ) : Node {
    override fun visit(
        visitors: MutableMap<String, Block>,
        parent: String?,
        identifier: UUID,
        nextUUID: UUID?,

    ) {
        val block0Id = UUID.randomUUID()
val block1Id = UUID.randomUUID()
        visitors[identifier.toString()] = BlockSpec(
            opcode = OpCode.Bitwise_bitwiseRightShift,
            inputs = mapOf(
                "LEFT" to setValue(block0, block0Id) ,
"RIGHT" to setValue(block1, block1Id) 
            ),
            fields = mapOf(
                
            )
        ).toBlock(nextUUID, parent)
        block0.visit(visitors, identifier.toString(), block0Id, null, )
block1.visit(visitors, identifier.toString(), block1Id, null, )
    }
}